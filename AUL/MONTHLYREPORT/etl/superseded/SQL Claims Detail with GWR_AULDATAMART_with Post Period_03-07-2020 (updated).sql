


DECLARE @FROM_DATE_PAID VARCHAR(MAX) = NULL;
DECLARE @TO_DATE_PAID VARCHAR(MAX) = '10/31/2023';
DECLARE @FROM_SOLD_DATE VARCHAR(MAX) = NULL;
DECLARE @TO_SOLD_DATE VARCHAR(MAX) = NULL;
DECLARE @ASOF_PERIOD CHAR(6) = '202310'; 
DECLARE @FC_ID VARCHAR(MAX) = '3641';
DECLARE @STATUS VARCHAR(MAX) = 'Paid';
DECLARE @DEALER_ID VARCHAR(MAX) = NULL;
DECLARE @DEALER_GROUP VARCHAR(MAX) = NULL;
DECLARE @ADMINISTRATOR VARCHAR(MAX) = NULL;

DECLARE @TABLE_PNO TABLE
(
	[VIN] VARCHAR(MAX),
	[CONTRACT #] VARCHAR(MAX),
	[CLAIM #] VARCHAR(MAX),
	[PAYEE #] VARCHAR(MAX),
	[CONTRACT STATUS] VARCHAR(MAX),
	[ADMINISTRATOR] VARCHAR(MAX),
	[MAKE] VARCHAR(MAX),
	[MODEL] VARCHAR(MAX),
	[MILEAGE] VARCHAR(MAX),
	[SOLD ON] DATETIME,
	[TRANSACTION DATE] DATETIME,
	[POST_PERIOD] INT,
	[POST_PERIOD_DATE] DATE,
	[DEALER ROLE IDENTIFIER] VARCHAR(MAX),
	[DEALER NAME] VARCHAR(MAX),
	[VENDOR NAME] VARCHAR(MAX),
	[VENDOR STATE] VARCHAR(MAX),
	[RO #] VARCHAR(MAX),
	[RO DATE] DATETIME,
	[CURRENT MILEAGE] VARCHAR(MAX),
	[CLAIM STATUS] VARCHAR(MAX),
	[PAID ON] DATETIME,
	[FAILURE CODE] VARCHAR(MAX),
	[FAILURE CODE DESCRIPTION] VARCHAR(MAX),
	[PEARL_AMOUNT] [DECIMAL](12, 2),
	[P_RATE] [DECIMAL](12, 2),
	[P_QUANTITY] [DECIMAL](12, 2),
	[P_TAX] [DECIMAL](12, 2),
	[L_RATE] [DECIMAL](12, 2),
	[L_QUANTITY] [DECIMAL](12, 2),
	[L_TAX] [DECIMAL](12, 2),
	[D_RATE] [DECIMAL](12, 2),
	[D_QUANTITY] [DECIMAL](12, 2),
	[D_TAX] [DECIMAL](12, 2),
	[T_RATE] [DECIMAL](12, 2),
	[T_QUANTITY] [DECIMAL](12, 2),
	[T_TAX] [DECIMAL](12, 2),
	[GOODWILL] [DECIMAL](12, 2),
	[IS_EXCLUDED] BIT,
	[IS_OYSTER] BIT,
	[IS_GROUPED] BIT,
	[OYSTER_PART_CODE] VARCHAR(MAX),
	[OYSTER_GROUP] VARCHAR(MAX),
	[PEARL_PART_CODE] VARCHAR(MAX),
	[PEARL_GROUP] VARCHAR(MAX),
	[GWR] BIT
);

DECLARE @TABLE_CC TABLE
(
	[VIN] VARCHAR(MAX),
	[CONTRACT #] VARCHAR(MAX),
	[CLAIM #] VARCHAR(MAX),
	[PAYEE #] VARCHAR(MAX),
	[CONTRACT STATUS] VARCHAR(MAX),
	[ADMINISTRATOR] VARCHAR(MAX),
	[MAKE] VARCHAR(MAX),
	[MODEL] VARCHAR(MAX),
	[MILEAGE] VARCHAR(MAX),
	[SOLD ON] DATETIME,
	[TRANSACTION DATE] DATETIME,
	[POST_PERIOD] INT,
	[POST_PERIOD_DATE] DATE,
	[DEALER ROLE IDENTIFIER] VARCHAR(MAX),
	[DEALER NAME] VARCHAR(MAX),
	[VENDOR NAME] VARCHAR(MAX),
	[VENDOR STATE] VARCHAR(MAX),
	[RO #] VARCHAR(MAX),
	[RO DATE] DATETIME,
	[CURRENT MILEAGE] VARCHAR(MAX),
	[CLAIM STATUS] VARCHAR(MAX),
	[PAID ON] DATETIME,
	[FAILURE CODE] VARCHAR(MAX),
	[FAILURE CODE DESCRIPTION] VARCHAR(MAX),
	[PART CODE] VARCHAR(MAX),
	[FAILURE CODE GROUP] VARCHAR(MAX),
	[PAID AMOUNT] [DECIMAL](12, 2),
	[GWR] BIT
);

DECLARE @ALIGNMENT_FC VARCHAR(MAX) = (SELECT [CODE] FROM [OCEAN].[dbo].[_ITEM] WHERE [NAME] = 'Alignment');
DECLARE @ASOF_CURRPERIOD VARCHAR(6);
DECLARE @TO_CLAIMS_DATE DATE,
		@FROM_DATE		DATE;

SET @ASOF_CURRPERIOD = (SELECT CAST(YEAR(GETDATE()) AS VARCHAR) + RIGHT('0' + RTRIM(MONTH(GETDATE())), 2));

DECLARE @ASOF_MM INT;
DECLARE @AS_NEXTMM INT;

SET @ASOF_MM = CAST(RIGHT(@ASOF_PERIOD, 2) AS INT);
SET @AS_NEXTMM = MONTH(GETDATE()) + 1;

IF @AS_NEXTMM <= 2
BEGIN
	SET @AS_NEXTMM = @AS_NEXTMM + 12; -- easier comparing
END;

IF (@AS_NEXTMM - @ASOF_MM > 1)
BEGIN
	SET @ASOF_PERIOD = @ASOF_CURRPERIOD;
END;

--select @ASOF_PERIOD,@ASOF_CURRPERIOD
SET @FROM_DATE = CAST(CONCAT(RIGHT(@ASOF_PERIOD, 2), '/01/', LEFT(@ASOF_PERIOD, 4)) AS DATE);
-- set ToDate to last day of month 23:59:59
SET @TO_CLAIMS_DATE = DATEADD(mm, DATEDIFF(m, 0, @FROM_DATE) + 1, 0);

DECLARE @SQL_QUERY NVARCHAR(MAX) = N'SELECT '
								   + N'A.VIN, A.CERT, CLAIMS.CLAIM_SEQUENCE, CLAIMS.PAYEE_SEQUENCE, A.CONTRACT_STATUS AS ''STATUS'', A.[PROGRAM_CODE] AS ''ADMINISTRATOR'', A.AUTOMAKE, A.AUTOMODEL, A.AUTOMILES, A.[SALE_DATE] AS MONTH_SOLD, A.TRANS_DATE, A.POST_PERIOD, CONVERT(date, CONVERT(varchar(8), ([POST_PERIOD] * 100) + 1), 112) AS ''POST_PERIOD_DATE'', A.[DEALER_ROLE_IDENTIFIER] AS DEALER_ID, A.DEALER_NAME'
								   + N',IIF(CLAIMS.VENDOR_ID IS NULL,IIF(CLAIMS.PAYEE_CODE IS NULL,CP.NAME,OP.VENDORNAME),NP.NAME) '
								   + N',IIF(CLAIMS.VENDOR_ID IS NULL,IIF(CLAIMS.PAYEE_CODE IS NULL,CP_STATE.NAME,OP.[STATE]),NP.PHYSICAL_STATE) '
								   + N',CLAIMS.REPAIR_ORDER_NO, CLAIMS.REPAIR_ORDER_DATE, CLAIMS.CURRENT_MILEAGE, CLAIMS.[STATUS], CLAIMS.DATE_PAID'
								   + N',IIF(CC.CLAIMS_ITEM_ID IS NULL,CC.FAILURE_CODE,NFC.CODE) '
								   + N',IIF(CC.CLAIMS_ITEM_ID IS NULL,IIF(OFC.FAILURE_CODE_DESCR IS NULL, CC.FAILURE_CODE, OFC.FAILURE_CODE_DESCR),NFC.NAME) '
								   + N',CC.COMPONENT_VALUE '
								   + N',CI.ADJUSTER_PART_RATE ,CI.ADJUSTER_PART_QUANTITY ,CI.ADJUSTER_PART_TAX '
								   + N',CI.ADJUSTER_LABOR_RATE ,CI.ADJUSTER_LABOR_TIME ,CI.ADJUSTER_LABOR_TAX '
								   + N',CI.DIAGNOSIS_RATE ,CI.DIAGNOSIS_TIME,CI.DIAGNOSIS_TAX '
								   + N',CI.TEARDOWN_RATE ,CI.TEARDOWN_TIME,CI.TEARDOWN_TAX '
								   + N',GOODWILL, EXCLUDE, IIF(CC.CLAIMS_ITEM_ID IS NOT NULL AND
                           CI.ID IS NOT NULL, 1, 0), IS_GROUPED, G.NAME, RG.NAME, CC.PART_CODE,IIF(OFC.FAILURE_CODE_GROUP IS NULL, ''Other'', OFC.FAILURE_CODE_GROUP) '
								   + N',CI.GWR ' + N'FROM [ocean].[ALLSALES] AS A WITH (NOLOCK) '
								   + N'LEFT JOIN [aullivedb].[CLAIMS] AS CLAIMS WITH (NOLOCK) ON A.CERT = CLAIMS.CERT '
								   + N'LEFT JOIN  [aullivedb].[CLAIM_COMPONENTS] AS CC WITH (NOLOCK) ON CC.CERT = CLAIMS.CERT AND CC.CLAIM_SEQUENCE = CLAIMS.CLAIM_SEQUENCE AND CC.PAYEE_SEQUENCE = CLAIMS.PAYEE_SEQUENCE '
								   + N'LEFT JOIN [ssrs].[VW_Dealers] AS D WITH (NOLOCK) ON D.[Role Identifier] = A.[DEALER_ROLE_IDENTIFIER] '
								   + N'LEFT JOIN [ocean].dbo.VENDORS AS OP WITH (NOLOCK) ON OP.VENDORCODE = CLAIMS.PAYEE_CODE '
								   + N'LEFT JOIN [ocean].dbo._VENDOR AS NP  WITH (NOLOCK) ON NP.ID = CLAIMS.VENDOR_ID '
								   + N'LEFT JOIN [ocean].dbo._CLAIMS_CUSTOMER AS CU WITH (NOLOCK) ON CU.CLAIMS_ID = CLAIMS.ID '
								   + N'LEFT JOIN [ocean].dbo._CUSTOMER AS CP  WITH (NOLOCK) ON CP.ID = CU.CUSTOMER_ID '
								   + N'LEFT JOIN [ocean].dbo._CITY AS CP_CITY WITH (NOLOCK) ON CP_CITY.ID = CP.CITY_ID '
								   + N'LEFT JOIN [ocean].dbo._STATE AS CP_STATE WITH (NOLOCK) ON CP_STATE.ID = CP_CITY.STATE_ID '
								   + N'LEFT JOIN [ocean].dbo._COUNTRY AS CP_COUNTRY WITH (NOLOCK) ON CP_COUNTRY.ID = CP_STATE.COUNTRY_ID '
								   + N'LEFT JOIN [ocean].dbo._CLAIMS_ITEM AS CI WITH (NOLOCK) ON CI.ID = CC.CLAIMS_ITEM_ID '
								   + N'LEFT JOIN [ocean].dbo._ITEM AS NFC  WITH (NOLOCK) ON NFC.ID = CI.ITEM_ID '
								   + N'LEFT JOIN [ocean].dbo.FAILURE_CODES AS OFC WITH (NOLOCK) ON OFC.FAILURE_CODE = CC.FAILURE_CODE '
								   + N'LEFT JOIN [ocean].dbo._RISK_GROUP AS RG  WITH (NOLOCK) ON RG.ID = NFC.RISK_GROUP_ID '
								   + N'LEFT JOIN [ocean].dbo._GROUP AS G  WITH (NOLOCK) ON G.ID = NFC.GROUP_ID '
								   + N'WHERE  CLAIMS.DATE_PAID < ''' + CAST(@TO_CLAIMS_DATE AS VARCHAR)
								   + N''' AND A.POST_PERIOD <= ' + @ASOF_PERIOD
								   + N' AND A.[CONTRACT_STATUS] IN (''Active'',''Cancelled'',''NIS'') AND CLAIMS.[STATUS] = '''
								   + @STATUS + N''''; --12/19/2018 -- added contract status to match ACTUARIALS data

SET @SQL_QUERY = @SQL_QUERY + IIF(@FROM_DATE_PAID IS NULL, '', ' AND CLAIMS.DATE_PAID >= ''' + @FROM_DATE_PAID + '''');
SET @SQL_QUERY = @SQL_QUERY + IIF(@TO_DATE_PAID IS NULL, '', ' AND CLAIMS.DATE_PAID <= ''' + @TO_DATE_PAID + '''');
SET @SQL_QUERY = @SQL_QUERY + IIF(@FROM_SOLD_DATE IS NULL, '', ' AND A.[SALE_DATE] >= ''' + @FROM_SOLD_DATE + '''');
SET @SQL_QUERY = @SQL_QUERY + IIF(@TO_SOLD_DATE IS NULL, '', ' AND A.[SALE_DATE] <= ''' + @TO_SOLD_DATE + '''');
SET @SQL_QUERY = @SQL_QUERY + IIF(@DEALER_ID IS NULL, '', ' AND A.DEALER_ROLE_IDENTIFIER = ''' + @DEALER_ID + '''');
SET @SQL_QUERY = @SQL_QUERY + IIF(@FC_ID IS NULL, '', ' AND A.LENDER_ROLE_IDENTIFIER = ''' + @FC_ID + '''');
SET @SQL_QUERY = @SQL_QUERY + IIF(@DEALER_GROUP IS NULL, '', ' AND D.[DLR GROUP] = ''' + @DEALER_GROUP + '''');
SET @SQL_QUERY = @SQL_QUERY + IIF(@ADMINISTRATOR IS NULL, '', ' AND A.PROGRAM_CODE = ''' + @ADMINISTRATOR + '''');

INSERT INTO @TABLE_PNO
EXECUTE [SP_EXECUTESQL] @SQL_QUERY;

PRINT @SQL_QUERY;

INSERT INTO @TABLE_CC -- PEARL      
SELECT [VIN],
	   [CONTRACT #],
	   [CLAIM #],
	   [PAYEE #],
	   IIF([CONTRACT STATUS] = 'Active', 'Processed', [CONTRACT STATUS]) as 'CONTRACT STATUS',
	   [ADMINISTRATOR],
	   [MAKE],
	   [MODEL],
	   [MILEAGE],
	   [SOLD ON],
	   [TRANSACTION DATE],
	   [POST_PERIOD],
	   [POST_PERIOD_DATE],
	   [DEALER ROLE IDENTIFIER],
	   [DEALER NAME],
	   [VENDOR NAME],
	   [VENDOR STATE],
	   [RO #],
	   [RO DATE],
	   [CURRENT MILEAGE],
	   [CLAIM STATUS],
	   [PAID ON],
	   [FAILURE CODE],
	   [FAILURE CODE DESCRIPTION],
	   IIF([PEARL_PART_CODE] = 'CPAR', 'GOODWILL', IIF([PEARL_PART_CODE] = 'REFUND ADJ', 'Other', [PEARL_PART_CODE])),
	   [PEARL_GROUP],
	   [PEARL_AMOUNT],
	   [GWR]
 FROM @TABLE_PNO
 WHERE [IS_OYSTER] = 0
UNION ALL --OYSTER - GROUPED  
SELECT [VIN],
	   [CONTRACT #],
	   [CLAIM #],
	   [PAYEE #],
	   IIF([CONTRACT STATUS] = 'Active', 'Processed', [CONTRACT STATUS]) as 'CONTRACT STATUS',
	   [ADMINISTRATOR],
	   [MAKE],
	   [MODEL],
	   [MILEAGE],
	   [SOLD ON],
	   [TRANSACTION DATE],
	   [POST_PERIOD],
	   [POST_PERIOD_DATE],
	   [DEALER ROLE IDENTIFIER],
	   [DEALER NAME],
	   [VENDOR NAME],
	   [VENDOR STATE],
	   [RO #],
	   [RO DATE],
	   [CURRENT MILEAGE],
	   [CLAIM STATUS],
	   [PAID ON],
	   [FAILURE CODE],
	   [FAILURE CODE DESCRIPTION],
	   [OYSTER_PART_CODE],
	   [OYSTER_GROUP],
	   ISNULL([P_RATE] * [P_QUANTITY], 0) + ISNULL([L_RATE] * [L_QUANTITY], 0) + ISNULL([D_RATE] * [D_QUANTITY], 0)
	   + ISNULL([T_RATE] * [T_QUANTITY], 0) + ISNULL([GOODWILL], 0),
	   [GWR]
 FROM @TABLE_PNO
 WHERE [IS_OYSTER] = 1
	   AND [IS_EXCLUDED] = 0
	   AND [IS_GROUPED] = 1
	   AND [FAILURE CODE] <> 'ST1000'
UNION ALL --OYSTER - NON GROUPED - Parts 
SELECT [VIN],
	   [CONTRACT #],
	   [CLAIM #],
	   [PAYEE #],
	   IIF([CONTRACT STATUS] = 'Active', 'Processed', [CONTRACT STATUS]) as 'CONTRACT STATUS',
	   [ADMINISTRATOR],
	   [MAKE],
	   [MODEL],
	   [MILEAGE],
	   [SOLD ON],
	   [TRANSACTION DATE],
	   [POST_PERIOD],
	   [POST_PERIOD_DATE],
	   [DEALER ROLE IDENTIFIER],
	   [DEALER NAME],
	   [VENDOR NAME],
	   [VENDOR STATE],
	   [RO #],
	   [RO DATE],
	   [CURRENT MILEAGE],
	   [CLAIM STATUS],
	   [PAID ON],
	   [FAILURE CODE],
	   [FAILURE CODE DESCRIPTION],
	   'Parts',
	   [OYSTER_GROUP],
	   ISNULL([P_RATE] * [P_QUANTITY], 0),
	   [GWR]
 FROM @TABLE_PNO
 WHERE [IS_OYSTER] = 1
	   AND [IS_EXCLUDED] = 0
	   AND [IS_GROUPED] = 0
	   AND [FAILURE CODE] <> 'ST1000'
UNION ALL --OYSTER - NON GROUPED - Labor = (LABOR + DIAGNOSIS + TEARDOWN)   
SELECT [VIN],
	   [CONTRACT #],
	   [CLAIM #],
	   [PAYEE #],
	   IIF([CONTRACT STATUS] = 'Active', 'Processed', [CONTRACT STATUS]) as 'CONTRACT STATUS',
	   [ADMINISTRATOR],
	   [MAKE],
	   [MODEL],
	   [MILEAGE],
	   [SOLD ON],
	   [TRANSACTION DATE],
	   [POST_PERIOD],
	   [POST_PERIOD_DATE],
	   [DEALER ROLE IDENTIFIER],
	   [DEALER NAME],
	   [VENDOR NAME],
	   [VENDOR STATE],
	   [RO #],
	   [RO DATE],
	   [CURRENT MILEAGE],
	   [CLAIM STATUS],
	   [PAID ON],
	   [FAILURE CODE],
	   [FAILURE CODE DESCRIPTION],
	   'Labor',
	   [OYSTER_GROUP],
	   ISNULL([L_RATE] * [L_QUANTITY], 0) + ISNULL([D_RATE] * [D_QUANTITY], 0) + ISNULL([T_RATE] * [T_QUANTITY], 0),
	   [GWR]
 FROM @TABLE_PNO
 WHERE [IS_OYSTER] = 1
	   AND [IS_EXCLUDED] = 0
	   AND [IS_GROUPED] = 0
	   AND [FAILURE CODE] <> 'ST1000'
UNION ALL --OYSTER - NON GROUPED - GOODWILL    
SELECT [VIN],
	   [CONTRACT #],
	   [CLAIM #],
	   [PAYEE #],
	   IIF([CONTRACT STATUS] = 'Active', 'Processed', [CONTRACT STATUS]) as 'CONTRACT STATUS',
	   [ADMINISTRATOR],
	   [MAKE],
	   [MODEL],
	   [MILEAGE],
	   [SOLD ON],
	   [TRANSACTION DATE],
	   [POST_PERIOD],
	   [POST_PERIOD_DATE],
	   [DEALER ROLE IDENTIFIER],
	   [DEALER NAME],
	   [VENDOR NAME],
	   [VENDOR STATE],
	   [RO #],
	   [RO DATE],
	   [CURRENT MILEAGE],
	   [CLAIM STATUS],
	   [PAID ON],
	   [FAILURE CODE],
	   [FAILURE CODE DESCRIPTION],
	   'GOODWILL',
	   [OYSTER_GROUP],
	   ISNULL([GOODWILL], 0),
	   [GWR]
 FROM @TABLE_PNO
 WHERE [IS_OYSTER] = 1
	   AND [IS_GROUPED] = 0 --AND [FAILURE CODE] <> @ALIGNMENT_FC   -- TEMP DISABLE failure code condition [03/24/2019] [MS]
UNION ALL --OYSTER - SALES TAX - (BOTH GROUPED AND NON GROUPED)  
SELECT [VIN],
	   [CONTRACT #],
	   [CLAIM #],
	   [PAYEE #],
	   IIF([CONTRACT STATUS] = 'Active', 'Processed', [CONTRACT STATUS]) as 'CONTRACT STATUS',
	   [ADMINISTRATOR],
	   [MAKE],
	   [MODEL],
	   [MILEAGE],
	   [SOLD ON],
	   [TRANSACTION DATE],
	   [POST_PERIOD],
	   [POST_PERIOD_DATE],
	   [DEALER ROLE IDENTIFIER],
	   [DEALER NAME],
	   [VENDOR NAME],
	   [VENDOR STATE],
	   [RO #],
	   [RO DATE],
	   [CURRENT MILEAGE],
	   [CLAIM STATUS],
	   [PAID ON],
	   [FAILURE CODE],
	   [FAILURE CODE DESCRIPTION],
	   'SALES TAX',
	   [OYSTER_GROUP],
	   ISNULL([P_RATE] * [P_QUANTITY] * [P_TAX] / 100, 0) + ISNULL([L_RATE] * [L_QUANTITY] * [L_TAX] / 100, 0)
	   + ISNULL([D_RATE] * [D_QUANTITY] * [D_TAX] / 100, 0) + ISNULL([T_RATE] * [T_QUANTITY] * [T_TAX] / 100, 0),
	   [GWR]
 FROM @TABLE_PNO
 WHERE [IS_OYSTER] = 1
	   AND [IS_EXCLUDED] = 0
UNION ALL --OYSTER - LABOR - ALIGNMENT   
SELECT [VIN],
	   [CONTRACT #],
	   [CLAIM #],
	   [PAYEE #],
	   IIF([CONTRACT STATUS] = 'Active', 'Processed', [CONTRACT STATUS]) as 'CONTRACT STATUS',
	   [ADMINISTRATOR],
	   [MAKE],
	   [MODEL],
	   [MILEAGE],
	   [SOLD ON],
	   [TRANSACTION DATE],
	   [POST_PERIOD],
	   [POST_PERIOD_DATE],
	   [DEALER ROLE IDENTIFIER],
	   [DEALER NAME],
	   [VENDOR NAME],
	   [VENDOR STATE],
	   [RO #],
	   [RO DATE],
	   [CURRENT MILEAGE],
	   [CLAIM STATUS],
	   [PAID ON],
	   [FAILURE CODE],
	   [FAILURE CODE DESCRIPTION],
	   'Labor',
	   [OYSTER_GROUP],
	   ISNULL([P_RATE] * [P_QUANTITY], 0) + ISNULL([L_RATE] * [L_QUANTITY], 0) + ISNULL([D_RATE] * [D_QUANTITY], 0)
	   + ISNULL([T_RATE] * [T_QUANTITY], 0),
	   [GWR]
 FROM @TABLE_PNO
 WHERE [IS_OYSTER] = 1
	   AND [IS_EXCLUDED] = 0
	   AND [FAILURE CODE] = 'ST1000'
UNION ALL -- ROAD AMERICA CLAIMS LEFT BEHIND, OTHERWISE -- Added 12/18/2018 -- 12/20/2018 made more generic!
SELECT [VIN],
	   [CONTRACT #],
	   [CLAIM #],
	   [PAYEE #],
	   IIF([CONTRACT STATUS] = 'Active', 'Processed', [CONTRACT STATUS]) as 'CONTRACT STATUS',
	   [ADMINISTRATOR],
	   [MAKE],
	   [MODEL],
	   [MILEAGE],
	   [SOLD ON],
	   [TRANSACTION DATE],
	   [POST_PERIOD],
	   [POST_PERIOD_DATE],
	   [DEALER ROLE IDENTIFIER],
	   [DEALER NAME],
	   [VENDOR NAME],
	   [VENDOR STATE],
	   [RO #],
	   [RO DATE],
	   [CURRENT MILEAGE],
	   [CLAIM STATUS],
	   [PAID ON],
	   [FAILURE CODE],
	   [FAILURE CODE DESCRIPTION],
	   [FCG].[FAILURE_CODE_GROUP] AS 'GROUP',
	   [OYSTER_GROUP],
	   [PEARL_AMOUNT],
	   [GWR]
 FROM @TABLE_PNO AS [PN]
	 JOIN [aullivedb].[FAILURE_CODE_GROUPING] AS [FCG]
		 ON [PN].[FAILURE CODE DESCRIPTION] = [FCG].[CODE]
 WHERE ISNULL([P_RATE] * [P_QUANTITY], 0) + ISNULL([L_RATE] * [L_QUANTITY], 0) + ISNULL([D_RATE] * [D_QUANTITY], 0)
	   + ISNULL([T_RATE] * [T_QUANTITY], 0) + ISNULL([GOODWILL], 0) = 0;


SELECT [VIN],
	   [CONTRACT #],
	   [CLAIM #],
	   [PAYEE #],
	   IIF([CONTRACT STATUS] = 'Active', 'Processed', [CONTRACT STATUS]) as 'CONTRACT STATUS',
	   [ADMINISTRATOR],
	   [MAKE],
	   [MODEL],
	   [MILEAGE],
	   [SOLD ON],
	   [TRANSACTION DATE],
	   [POST_PERIOD],
	   [POST_PERIOD_DATE],
	   [DEALER ROLE IDENTIFIER],
	   [DEALER NAME],
	   [VENDOR NAME],
	   [VENDOR STATE],
	   [RO #],
	   [RO DATE],
	   [CURRENT MILEAGE],
	   [CLAIM STATUS],
	   [PAID ON],
	   [FAILURE CODE],
	   [FAILURE CODE DESCRIPTION],
	   [PART CODE],
	   [FAILURE CODE GROUP],
	   SUM([PAID AMOUNT] * -1) AS 'PAID AMOUNT',
	   [GWR]
 FROM @TABLE_CC
 WHERE [PAID AMOUNT] IS NOT NULL
	   AND [PAID AMOUNT] <> 0
 GROUP BY [VIN],
		  [CONTRACT #],
		  [CLAIM #],
		  [PAYEE #],
		  [CONTRACT STATUS],
		  [ADMINISTRATOR],
		  [MAKE],
		  [MODEL],
		  [MILEAGE],
		  [SOLD ON],
		  [TRANSACTION DATE],
		  [POST_PERIOD],
		  [POST_PERIOD_DATE],
		  [DEALER ROLE IDENTIFIER],
		  [DEALER NAME],
		  [VENDOR NAME],
		  [VENDOR STATE],
		  [RO #],
		  [RO DATE],
		  [CURRENT MILEAGE],
		  [CLAIM STATUS],
		  [PAID ON],
		  [FAILURE CODE],
		  [FAILURE CODE DESCRIPTION],
		  [PART CODE],
		  [FAILURE CODE GROUP],
		  [GWR]
 ORDER BY [PART CODE];
